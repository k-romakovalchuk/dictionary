{"version":3,"sources":["app/hooks.ts","components/Header.tsx","pages/HomePage.tsx","features/wordsSlice.ts","pages/AddWord.tsx","pages/WordCheck.tsx","pages/History.tsx","pages/Empty.tsx","App.tsx","app/store.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","Header","className","to","HomePage","words","state","length","map","word","i","wordOnUkr","wordOnEng","id","history","localStorage","getItem","JSON","parse","initialState","wordsReducer","createSlice","name","reducers","addWord","action","push","payload","newWords","setItem","stringify","addAudit","newHistory","actions","AddWord","useState","setWord","error","setError","translation","setTranslation","dispatch","type","placeholder","value","onChange","event","target","style","width","required","onClick","uuidv4","WordCheck","render","setRender","persent","setPersent","selectedWords","useMemo","result","index","Math","floor","random","filter","item","arr","indexOf","wordNumber","setWordNumber","wordsOnEng","unique","uniqueMass","Object","values","forEach","includes","sort","Fragment","selectWord","prev","newDate","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","progress","number","handleClick","History","Empty","App","path","element","store","configureStore","reducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a07e77a.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use these hooks everywhere instead of useDispatch and useSelector\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header: React.FC = () => {\n  return (\n    <div className=\"tabs is-centered\">\n      <ul>\n        <li>\n          <NavLink to=\"/\" className=\"navbar-item\">\n            Наш словник\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/add\" className=\"navbar-item\">\n            Додати слово\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/check\" className=\"navbar-item\">\n            Перевірити слова\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/history\" className=\"navbar-item\">\n            Історія перевірок\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useAppSelector } from '../app/hooks';\nimport { Header } from '../components/Header';\n\nexport const HomePage: React.FC = () => {\n  const words = useAppSelector(state => state.words);\n\n  return (\n    <>\n      <Header />\n      <section className=\"section is-flex is-flex-direction-column is-align-items-center\">\n        {words.length !== 0 ? (\n          <div className=\"container is-flex is-flex-direction-column is-align-items-center\">\n            <h1 className=\"title\">Словник</h1>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>№</th>\n                  <th>Слово</th>\n                  <th>Переклад</th>\n                </tr>\n              </thead>\n              <tbody>\n                {words.map((word, i) => (\n                  <tr key={word.id}>\n                    <th>{i + 1}</th>\n                    <th>{word.wordOnUkr}</th>\n                    <th>{word.wordOnEng}</th>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <h1 className=\"title\">В словнику немає слів</h1>\n        )}\n      </section>\n    </>\n  );\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Audit, Word } from '../types/types';\n\nlet words = []; let\n  history = [];\n\nif (localStorage.getItem('words')) {\n  words = JSON.parse(localStorage.getItem('words') || '');\n}\n\nif (localStorage.getItem('history')) {\n  history = JSON.parse(localStorage.getItem('history') || '');\n}\n\nexport interface InitialState {\n  words: Word[],\n  history: Audit[],\n}\n\nexport const initialState: InitialState = {\n  words: words || [],\n  history: history || [],\n};\n\nexport const wordsReducer = createSlice({\n  name: 'words',\n  initialState,\n  reducers: {\n    addWord: (state, action: PayloadAction<Word>) => {\n      state.words.push(action.payload);\n      let newWords = [];\n\n      if (localStorage.getItem('words')) {\n        newWords = JSON.parse(localStorage.getItem('words') || '');\n      }\n\n      localStorage.setItem('words', JSON.stringify([\n        ...newWords, action.payload,\n      ]));\n    },\n    addAudit: (state, action: PayloadAction<Audit>) => {\n      state.history.push(action.payload);\n      let newHistory = [];\n\n      if (localStorage.getItem('history')) {\n        newHistory = JSON.parse(localStorage.getItem('history') || '');\n      }\n\n      localStorage.setItem('history', JSON.stringify([\n        ...newHistory, action.payload,\n      ]));\n    },\n  },\n});\n\nexport default wordsReducer.reducer;\n\nexport const { addWord, addAudit } = wordsReducer.actions;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useAppDispatch } from '../app/hooks';\nimport { addWord } from '../features/wordsSlice';\nimport { Header } from '../components/Header';\n\nexport const AddWord: React.FC = () => {\n  const [word, setWord] = useState('');\n  const [error, setError] = useState(0);\n  const [translation, setTranslation] = useState('');\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <Header />\n      <section className=\"section is-flex is-flex-direction-column is-align-items-center\">\n        <form>\n          <div className=\"field\">\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Word\"\n                value={word}\n                onChange={(event) => {\n                  setWord(event.target.value);\n                }}\n                style={{ width: '400px' }}\n              />\n            </div>\n            {(error === 1 || error === 3) && (\n              <p className=\"help is-danger\">\n                This field is required\n              </p>\n            )}\n          </div>\n          <div className=\"field\">\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Translation\"\n                value={translation}\n                style={{ width: '400px' }}\n                onChange={(event) => {\n                  setTranslation(event.target.value);\n                }}\n                required\n              />\n            </div>\n            {(error === 2 || error === 3) && (\n              <p className=\"help is-danger\">\n                This field is required\n              </p>\n            )}\n          </div>\n          <div className=\"control\">\n            <button\n              className=\"button is-info\"\n              type=\"button\"\n              onClick={() => {\n                if (word && translation) {\n                  dispatch(addWord({ id: uuidv4(), wordOnUkr: word, wordOnEng: translation }));\n                  setWord('');\n                  setTranslation('');\n                  setError(0);\n                } else {\n                  if (word === '') {\n                    setError(1);\n                  }\n\n                  if (translation === '') {\n                    setError(2);\n                  }\n\n                  if (word === '' && translation === '') {\n                    setError(3);\n                  }\n                }\n              }}\n            >\n              ADD\n            </button>\n          </div>\n        </form>\n      </section>\n    </>\n  );\n};\n","import React, { useMemo, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useAppDispatch, useAppSelector } from '../app/hooks';\nimport { addAudit } from '../features/wordsSlice';\nimport { Word } from '../types/types';\nimport { Header } from '../components/Header';\n\nexport const WordCheck: React.FC = () => {\n  const [render, setRender] = useState(1);\n  const [persent, setPersent] = useState(0);\n  const [word, setWord] = useState<Word>();\n  const words = useAppSelector(state => state.words);\n\n  const dispatch = useAppDispatch();\n\n  const selectedWords = useMemo(() => {\n    let result: Word[] = [];\n\n    while (result.length !== 10) {\n      const index = Math.floor(Math.random() * Math.floor(words.length));\n\n      result.push(words[index]);\n      result = result.filter((item, i, arr) => arr.indexOf(item) === i);\n    }\n\n    setWord(result[0]);\n\n    return result;\n  }, [render]);\n\n  const [wordNumber, setWordNumber] = useState(1);\n\n  const wordsOnEng = useMemo(() => {\n    let result: string[] = [];\n\n    if (word) {\n      result.push(word.wordOnEng);\n    }\n\n    function unique(arr: string[]) {\n      const uniqueMass: string[] = [];\n\n      Object.values(arr).forEach(item => {\n        if (!uniqueMass.includes(item)) {\n          uniqueMass.push(item);\n        }\n      });\n\n      return uniqueMass;\n    }\n\n    while (result.length !== 4) {\n      const index = Math.floor(Math.random() * Math.floor(words.length));\n\n      result.push(words[index].wordOnEng);\n      result = unique(result);\n    }\n\n    result = result.sort(() => Math.random() - 0.5);\n\n    return result;\n  }, [word]);\n\n  const handleClick = (selectWord: string) => {\n    if (selectWord === word?.wordOnEng) {\n      setPersent(prev => prev + 10);\n    }\n\n    if (wordNumber === 10) {\n      const newDate = new Date();\n      const date = `${newDate.getFullYear()}-${newDate.getMonth()}-${newDate.getDate()}\n      ${newDate.getHours()}:${newDate.getMinutes()}`;\n\n      dispatch(addAudit({ id: uuidv4(), progress: persent + 10, date }));\n      setWordNumber(0);\n      setRender(3);\n\n      return;\n    }\n\n    setWordNumber(number => number + 1);\n    setWord(selectedWords[wordNumber]);\n  };\n\n  return (\n    <>\n      <Header />\n      <section className=\"section is-flex is-flex-direction-column is-align-items-center\">\n        {render === 2 && (\n          <div className=\"container is-flex is-flex-direction-column is-align-items-center\">\n            <div className=\"block is-size-4\">\n              {wordNumber}\n              .\n              {' '}\n              {word?.wordOnUkr}\n            </div>\n            <div className=\"buttons\">\n              {wordsOnEng?.map((item, i) => (\n                <React.Fragment key={item}>\n                  <button\n                    type=\"button\"\n                    className=\"button is-info is-rounded is-medium\"\n                    onClick={() => {\n                      handleClick(wordsOnEng[i]);\n                    }}\n                  >\n                    {wordsOnEng[i]}\n                  </button>\n                </React.Fragment>\n              ))}\n            </div>\n          </div>\n        )}\n        <section className=\"section\">\n          {render === 3 && (\n            <div className=\"container is-flex is-flex-direction-column is-align-items-center\">\n              <h1 className=\"title is-1\">Результат</h1>\n              <h2 className=\"title is-2\">\n                {persent}\n                %\n              </h2>\n            </div>\n          )}\n          {(render === 1 || render === 3) && (\n            <button\n              type=\"button\"\n              className=\"button is-medium is-info is-outlined mt-5\"\n              onClick={() => {\n                setRender(2);\n                setPersent(0);\n              }}\n            >\n              Перевірити\n              {' '}\n              {render === 1 ? 'слова' : 'знову'}\n            </button>\n          )}\n        </section>\n      </section>\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppSelector } from '../app/hooks';\nimport { Header } from '../components/Header';\n\nexport const History: React.FC = () => {\n  const history = useAppSelector(state => state.history);\n\n  return (\n    <>\n      <Header />\n      <section className=\"section is-flex is-flex-direction-column is-align-items-center\">\n        {history.length !== 0 ? (\n          <div className=\"container is-flex is-flex-direction-column is-align-items-center\">\n            <h1 className=\"title\">Історія перевірок</h1>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>№</th>\n                  <th>Дата</th>\n                  <th>Результат</th>\n                </tr>\n              </thead>\n              <tbody>\n                {history.map((word, i) => (\n                  <tr key={word.id}>\n                    <th>{i + 1}</th>\n                    <th>{word.date}</th>\n                    <th>\n                      {word.progress}\n                      %\n                    </th>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <h1 className=\"title\">Перевірок немає</h1>\n        )}\n      </section>\n    </>\n  );\n};\n","import React from 'react';\nimport { Header } from '../components/Header';\n\nexport const Empty = () => {\n  return (\n    <>\n      <Header />\n      <section className=\"section is-flex is-flex-direction-column is-align-items-center\">\n        <h1 className=\"title\">Щоб зробити перевірку, добавте в словник не менше ніж 10 слів</h1>\n      </section>\n    </>\n  );\n};\n","import React from 'react';\nimport 'bulma/css/bulma.min.css';\nimport { Route, Routes } from 'react-router-dom';\nimport { HomePage } from './pages/HomePage';\nimport { AddWord } from './pages/AddWord';\nimport { WordCheck } from './pages/WordCheck';\nimport { History } from './pages/History';\nimport { useAppSelector } from './app/hooks';\nimport { Empty } from './pages/Empty';\n\nconst App: React.FC = () => {\n  const words = useAppSelector(state => state.words);\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/add\" element={<AddWord />} />\n      <Route path=\"/check\" element={words.length >= 10 ? <WordCheck /> : <Empty />} />\n      <Route path=\"/history\" element={<History />} />\n    </Routes>\n  );\n};\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport wordsReducer from '../features/wordsSlice';\n\nexport const store = configureStore({\n  reducer: wordsReducer,\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\nReturnType,\nRootState,\nunknown,\nAction<string>\n>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport { store } from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}